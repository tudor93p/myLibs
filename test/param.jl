using myLibs: Parameters 
using OrderedCollections: OrderedDict 

module M 


end 

function usedkeys()
	[:X,:Z]

end 

usedkeys(P::AbstractDict) = usedkeys()

NrParamSets = 1




input_dict = Dict(

		:allparams => Dict(:X=>[1],:Y=>[3,4],:T=>[10,20,30]),

#		:digits => OrderedDict(:X=>(1,0), :Y=>(1,1), :Z=>(2,2)),
		:digits => (X=(1,0), Y=(1,1), Z=(2,2)),

		)



Parameters.Operations.typical_allparams(usedkeys, input_dict[:allparams]) |> println

const ROOT = "Data"

#jFN = Parameters.FileName("Data", usedkeys, identity, identity) 


#@show Parameters.fname(ROOT)("some_file")

#@show FN

P = Dict(:X=>44,:Z=>0.5,:Y=>-3,:T=>-2.5)

pd = Parameters.typical_params_digits(usedkeys, input_dict[:digits])

@show pd(P)

println()

@show Parameters.params_to_string(pd(P))

@show Parameters.prefix(ROOT)
@show Parameters.prefix(M)
@show Parameters.prefix(ROOT,M)
@show Parameters.prefix(M,ROOT)



#
#@show Parameters.fname(ROOT, pd)("some_file")
#@show Parameters.fname(ROOT, pd, P)("some_file")
#@show Parameters.fname(ROOT, pd, P, P)("some_file")
#
#
#@show Parameters.fname(M, pd)("some_file") 
#@show Parameters.fname(M, pd, P)("some_file") 
#@show Parameters.fname(ROOT, M, pd, P)("some_file") 
#@show Parameters.fname(ROOT, M, pd, P)("some_file") 
@show Parameters.prefix("", M,ROOT)#, pd, P)("some_file") 
#
#
##ROOT, M, pd
#
#
#get_fname(args...) = Parameters.fname(ROOT, M, pd, args...) 
#
#@show get_fname(P,P,P)("nnewfile")
#


pd = Parameters.typical_params_digits(usedkeys, input_dict[:digits])


FN = Parameters.mystruct(usedkeys, pd, Parameters.prefix("", M,ROOT))



FN = Parameters.mystruct(usedkeys, (usedkeys, input_dict[:digits]), 
												 ("", M,ROOT))

FN = Parameters.mystruct(usedkeys, input_dict[:digits], (ROOT, M)) 
@show FN.get_fname(P)("sa")

FN = Parameters.mystruct((usedkeys, input_dict[:digits]),ROOT)

@show FN
















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 















 













 















 















 















 















 




















println()
