import myLibs: SignalProcessing 
import FFTW 




Y = [-1.1297372545874291 -0.4913145272009203 -0.03491119958786372 -0.02973246963396443; -1.2951671916619611 -0.6493674808960423 -0.06449358926243373 -0.054923117055289336; 0.19393703243582122 -0.41551742103205735 -0.2009165906628927 -0.17854682312262926; 0.5715042813716922 -0.3418545923150457 -0.326422765280847 -0.2965453474639708; 0.2689638495469713 0.04594045902483895 -0.3031889139271793 -0.2894088035445202; 0.24823006915335438 0.3123769789372634 -0.2674636100204819 -0.27108523106394106; 0.19644008588853862 0.22835978394262896 -0.18718701174017444 -0.20232887921467826; 0.005288701273520574 0.16703160162572864 -0.07631795418084558 -0.09957176618252706; -0.10711731299601021 0.14085049195467206 -0.014179829209488848 -0.03836283062449175; -0.09725797732193961 0.02184876515592979 0.02825037996395774 0.006928614630978047; -0.044863760412444165 -0.08731464284020965 0.06871016401389596 0.05036166198273856; 0.002348032614607143 -0.08447975504372868 0.08623243597849334 0.07407629952077738; 0.02999990856708673 -0.023002910883329036 0.08152936535024269 0.07978783010121715; 0.0365228261796125 0.0194557060850665 0.06357345300339584 0.07110754718631782; 0.032375957063215555 0.03077190926295234 0.0371484688427669 0.048679047641189854; 0.024406354352979248 0.0276586386655982 0.014502503213584594 0.02518802357201977; 0.009420021341644713 0.016810919773965982 0.003023865058739611 0.010122687037818934; -0.01141680130831707 0.0005012311087001509 -0.0036325513751286898 -0.00018127493447853138; -0.028560624053186823 -0.014446430861028564 -0.010399995282132202 -0.009132929742765444; -0.03356329316891349 -0.022289773931158524 -0.015644213904071474 -0.01587534171688698; -0.02539371166587842 -0.021207490701738524 -0.01728946050660235 -0.01892865786757103; -0.009001286994985869 -0.011711179049848308 -0.014055734775397122 -0.016415715417635923; 0.009601627893052606 0.002358623889417988 -0.006499080942384328 -0.008603629085930209; 0.025178615179424713 0.014845355462003135 0.0023389384739440633 0.0010642809627073313; 0.03225419039881541 0.021145747989240016 0.009477938870295244 0.009062035280330172; 0.02710619852090873 0.019495256073493228 0.013125319555366971 0.013261538744614637; 0.011303924049528236 0.010524887973102942 0.012186526477990567 0.012616818680774106; -0.008828417808022793 -0.002489526571422096 0.006865095552640532 0.007506353321067277; -0.025596166370217888 -0.014485171641619055 -0.0008634290924099675 -0.0001773730351630476; -0.032638236001797494 -0.020921979324297096 -0.008101033154637033 -0.0077606212463645075; -0.027166946447688467 -0.01944107088184127 -0.012185030538146513 -0.012548655741555392; -0.011361375669018708 -0.010523003556326599 -0.011684617747472148 -0.01275540008877274; 0.008690817309683602 0.0023821583629189125 -0.007159117053586794 -0.00859991522700998; 0.02549380873660105 0.014183913059262976 -0.0008580813859233039 -0.0022318641812981155; 0.03257507218733929 0.020535553462613737 0.004215659614684342 0.0034817058638097753; 0.02684163853061984 0.019295704030728583 0.0054176141168331415 0.006216110804689645; 0.010234918142081453 0.011617863756267971 0.003176154875725423 0.006403052194614733; -0.010200874115243397 0.0020249142765921824 0.002097858530453328 0.008040289214064245; -0.024943173831502713 -0.006572480151936122 0.006524525390710023 0.014223486306065014; -0.02777756104419285 -0.0173438187406163 0.01761717061068452 0.024493087397896462; -0.019333697980192882 -0.031021789581706843 0.03391459152139453 0.03704209870396974; -0.005415664932183345 -0.03543253687751674 0.04894715101751279 0.04681906285682652; 0.005246438012062635 -0.02006909105397625 0.05577049511755444 0.04795524704986315; 0.008423380110650497 0.0030573086090687485 0.05448160529115437 0.04106405311882583; 0.007625418174771595 0.026169618968772818 0.03911885677870247 0.021472489499691938; 0.0006378816216286304 0.08221495527521683 -0.0038959408644505533 -0.02301386698474278; -0.003036847235513701 0.1725445145367783 -0.06736716201287801 -0.08422124170102488; 0.05283461051477925 0.19035043305057303 -0.1367580143133738 -0.14606370577105318; 0.21116929091565337 0.10070896247722622 -0.20378948085870494 -0.20142363759853604; 0.29826135952667454 0.001993467586198283 -0.22072867815826175 -0.2098476088799228; 0.042611386138466545 -0.1793105384628748 -0.176710148468268 -0.16226249151044322; -0.16560877214823652 -0.3400197386116883 -0.12810700841949726 -0.11281923619851907; -0.10662998807194174 -0.23638454813818777 -0.0604265095202325 -0.051513262656228506; -0.5063221068776482 -0.26294695037347804 -0.0070700778400876844 -0.003426991476330639; -0.4967513790062784 -0.22062273736550223 -0.00277665096055677 -0.0003598380420796708]





x = [-27.0, -26.0, -25.0, -24.0, -23.0, -22.0, -21.0, -20.0, -19.0, -18.0, -17.0, -16.0, -15.0, -14.0, -13.0, -12.0, -11.0, -10.0, -9.0, -8.0, -7.0, -6.0, -5.0, -4.0, -3.0, -2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0];



K = FFTW.rfftfreq(length(x), 2pi/(x[2]-x[1]))

A = abs.(mapslices(FFTW.rfft, Y, dims=1))



import PyPlot 

PyPlot.close(6789)

nr_subplots = size(Y,2)

fig,Ax = PyPlot.subplots(2,nr_subplots,figsize=(3*nr_subplots,6),num=6789,
												 sharex="row",sharey="row")

fig.tight_layout() 

Alim = [0,maximum(A)*1.05]



for (s,(A1,Y1)) in enumerate(zip(eachcol(A),eachcol(Y)))

	println() 

	Ax[1,s].plot(x,Y1,zorder=10,lw=2)

#	Ax[1,s].set_title(string("E=",round(energies[s],digits=3)))

	Ax[1,s].set_xlabel("Coordinate \$x\$")

	Ax[1,s].plot(x,fill(0,length(x)),zorder=4,lw=0.5,ls="--",c="gray",alpha=0.8)

	Ax[1,s].set_xlim(extrema(x))



#	Ax[2,s].plot(K,A[:,s],zorder=10,lw=3,label="raw",ls="--")


	smooth = 0.1

#	k,a = Tr.interp(K, a; smooth=smooth)

	spline = SignalProcessing.Interp1D(K, A1, 3; s=smooth)

	k_plot = LinRange(extrema(K)..., 200)

	Ax[2,s].plot(k_plot, spline(k_plot), zorder=15,lw=2,label="s=$smooth",ls="-",alpha=0.8)



	all_peaks, all_dips = SignalProcessing.identifyPeaksDips_cubicSpline(spline) 

	for (k,v) in eachcol(all_peaks)

		Ax[2,s].plot(fill(k,2),[0,v],zorder=4,lw=1,ls="--",c="gray")

		Ax[2,s].scatter(k,v,s=10,c="gray",zorder=30) 

	end 

	for (k,v) in eachcol(all_dips)

		Ax[2,s].plot(fill(k,2),Alim,lw=1,c="violet",zorder=0,ls="--")

	end 



	peaks, left_bases, right_bases = SignalProcessing.peakProminences(all_peaks, all_dips)



	for B in [left_bases,right_bases],(k,v) in eachcol(B)

		Ax[2,s].plot(fill(k,2),[0,v],lw=2.5,c="violet",zorder=5)
	
	end 


	for (k,v,p) in eachcol(peaks)

		Ax[2,s].plot(fill(k,2),[v-p,v],lw=3,c="red",zorder=25)

	end 


	Ax[2,s].set_xlabel("Frequency \$k_x\$")

	Ax[2,s].legend()

	Ax[2,s].set_ylim(Alim)

	Ax[2,s].set_xlim([0,pi]+0.1*[-1,1])


end 


fig.tight_layout()
fig.subplots_adjust(top=0.91,bottom=0.08)











